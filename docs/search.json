[
  {
    "objectID": "Homework4.html",
    "href": "Homework4.html",
    "title": "ST 558 Homework 4",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nThe lapply() function is designed to apply a specific function (usually custom made) to each element in a list of objects, allowing for vectorized-ish processing that is quicker than looping. The equivalent function in purrr would be map().\n\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\n\nThis would be coded as: lapply(X = my_list, FUN = cor, method=“kendall”)\n\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\n\nPurrr functions provide additional helper functions to make code more compact/readable, and Purrr functions are generally more consistent across the function variations like map(), map2(), etc., compared to lapply(), tapply(), etc.\n\n\nWhat is a side-effect function?\n\n\nA side-effect function is one that does not output the original data set being input to the function, instead providing some other sort of output such as a plot or a print.\n\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nA variable can be named “sd” within a function because when the function is called it creates a temporary environment that supersedes all other environments, and which is deleted after the function finishes, so any definitions that occur within the function itself do not ultimately affect the other environment levels."
  },
  {
    "objectID": "Homework4.html#task-1-conceptual-questions",
    "href": "Homework4.html#task-1-conceptual-questions",
    "title": "ST 558 Homework 4",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nThe lapply() function is designed to apply a specific function (usually custom made) to each element in a list of objects, allowing for vectorized-ish processing that is quicker than looping. The equivalent function in purrr would be map().\n\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\n\nThis would be coded as: lapply(X = my_list, FUN = cor, method=“kendall”)\n\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\n\nPurrr functions provide additional helper functions to make code more compact/readable, and Purrr functions are generally more consistent across the function variations like map(), map2(), etc., compared to lapply(), tapply(), etc.\n\n\nWhat is a side-effect function?\n\n\nA side-effect function is one that does not output the original data set being input to the function, instead providing some other sort of output such as a plot or a print.\n\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nA variable can be named “sd” within a function because when the function is called it creates a temporary environment that supersedes all other environments, and which is deleted after the function finishes, so any definitions that occur within the function itself do not ultimately affect the other environment levels."
  },
  {
    "objectID": "Homework4.html#task-2-writing-r-functions",
    "href": "Homework4.html#task-2-writing-r-functions",
    "title": "ST 558 Homework 4",
    "section": "Task 2: Writing R Functions",
    "text": "Task 2: Writing R Functions\nFirst, we define a function that takes two input vectors, one of responses and one of predicted value, an automatically calculates the Root Mean Square Error per the formula in the prompt.\n\ngetRMSE &lt;- function(resp,pred,...){\n  diff &lt;- resp-pred\n  diffsq &lt;- diff*diff\n  rmse &lt;- sqrt(mean(diffsq,...))\n  rmse\n}\n\nNext, we simulate some data to use to test our RMSE function, so that we have a response vector, a prediction vector, and a response vector with some artificially missing data.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\nrespMiss &lt;- resp \nrespMiss[c(1,2)] &lt;- NA_real_\n\nWe then test our function to ensure it returns what we expect: the RMSE for response and prediction, NA when there are missing values and na.rm is not specified, and an RMSE with null values removed with na.rm is specified as true.\n\ngetRMSE(resp,pred)\n\n[1] 0.9581677\n\ngetRMSE(respMiss,pred)\n\n[1] NA\n\ngetRMSE(respMiss,pred,na.rm=TRUE)\n\n[1] 0.9661699\n\n\nNext, we complete the same process for the Mean Absolute Deviation, defining a function, re-generating sample data, and testing to ensure the MAE is returned for normal response and prediction, NA is returned when there are missing values, and an adjusted MAE is returned when missing values are removed.\n\ngetMAE &lt;- function(resp,pred,...){\n  absdiff &lt;- abs(resp-pred)\n  mae &lt;- mean(absdiff,...)\n  mae\n}\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\nrespMiss &lt;- resp \nrespMiss[c(1,2)] &lt;- NA_real_\n\ngetMAE(resp,pred)\n\n[1] 0.8155776\n\ngetMAE(respMiss,pred)\n\n[1] NA\n\ngetMAE(respMiss,pred,na.rm=TRUE)\n\n[1] 0.8241201\n\n\nNext, we create a wrapper function that takes arguements for a response vecetor, a prediction vector, a string of the desired function outputs, and allows for the specification of na.rm if needed. Notably, the way I have defined this function requires that, if multiple functions are desired, they be included within one string separated by a space to be parsed correctly. Additionally, the way I wrote this function assumes that the helper functions are named according to “getX” in order to parse the names neatly and correctly in the output.\n\nmyWrapper &lt;- function(resp,pred,metric=\"getRMSE getMAE\",...){\n  if(!is.numeric(resp) || !is.vector(resp) || !is.atomic(resp)){\n    stop(\"Response provided is not a numerical atomic vector\")\n  }\n  if(!is.numeric(pred) || !is.vector(pred) || !is.atomic(pred)){\n    stop(\"Prediction provided is not a numerical atomic vector\")\n  }\n  metricVec &lt;- strsplit(metric,\" \")[[1]]\n  val &lt;- c()\n  for (i in 1:length(metricVec)){\n    val[i] &lt;- get(metricVec[i])(resp,pred,...)\n    names(val)[i] &lt;- substr(metricVec[i],4,nchar(metricVec[i]))\n  }\n  val \n}\n\nWe then generate our simulated data again, and use it to confirm our function is working correctly.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\nrespMiss &lt;- resp \nrespMiss[c(1,2)] &lt;- NA_real_\n\nFirst we confirm that not specifying a helper function works as intended, that specifying each combination of a helper function works as intended.\n\nmyWrapper(resp,pred)\n\n     RMSE       MAE \n0.9581677 0.8155776 \n\nmyWrapper(resp,pred,\"getRMSE\")\n\n     RMSE \n0.9581677 \n\nmyWrapper(resp,pred,\"getMAE\")\n\n      MAE \n0.8155776 \n\nmyWrapper(resp,pred,\"getRMSE getMAE\")\n\n     RMSE       MAE \n0.9581677 0.8155776 \n\n\nNext we confirm that all version output “NA” when including missing data without rm.na specified.\n\nmyWrapper(respMiss,pred)\n\nRMSE  MAE \n  NA   NA \n\nmyWrapper(respMiss,pred,\"getRMSE\")\n\nRMSE \n  NA \n\nmyWrapper(respMiss,pred,\"getMAE\")\n\nMAE \n NA \n\nmyWrapper(respMiss,pred,\"getRMSE getMAE\")\n\nRMSE  MAE \n  NA   NA \n\n\nNext we confirm that all versions provide adjusted results when rm.na is set to true.\n\nmyWrapper(respMiss,pred,na.rm=TRUE)\n\n     RMSE       MAE \n0.9661699 0.8241201 \n\nmyWrapper(respMiss,pred,\"getRMSE\",na.rm=TRUE)\n\n     RMSE \n0.9661699 \n\nmyWrapper(respMiss,pred,\"getMAE\",na.rm=TRUE)\n\n      MAE \n0.8241201 \n\nmyWrapper(respMiss,pred,\"getRMSE getMAE\",na.rm=TRUE)\n\n     RMSE       MAE \n0.9661699 0.8241201 \n\n\nLastly, we test that the correct error messages are thrown when one of the input vectors is not actually an atomic numeric vector.\n\nmyWrapper(iris,pred)\n\nError in myWrapper(iris, pred): Response provided is not a numerical atomic vector\n\nmyWrapper(resp,iris)\n\nError in myWrapper(resp, iris): Prediction provided is not a numerical atomic vector"
  },
  {
    "objectID": "Homework4.html#task-3-querying-an-api-and-a-tidy-style-function",
    "href": "Homework4.html#task-3-querying-an-api-and-a-tidy-style-function",
    "title": "ST 558 Homework 4",
    "section": "Task 3: Querying an API and a Tidy-Style Function",
    "text": "Task 3: Querying an API and a Tidy-Style Function\nTo query the News API, we first look into the website documentation and determine a few variables we can specify in our URL. For my initial query, I decided to select the subject of “Elon Musk” as I assumed there would be many articles based on the recent Tesla compensation package drama. Additionally, I decided to sort the results by popularity, and I used the API I recieved after registering on the website. We then translate this query into usable parsed data, eventually returning a dataframe with the actual information on each article.\n\nURL &lt;- \"https://newsapi.org/v2/everything?q=Elon%20Musk&sortBY=popularity&apiKey=6817506ff35546e58c629710b46cafd1\"\nnews &lt;- GET(URL)\nparsed &lt;- fromJSON(rawToChar(news$content))\narticleInfo &lt;- as_tibble(parsed$articles)\narticleInfo\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Yaho… Steve… WSJ … \"Warning: … http… &lt;NA&gt;       2024-06-12… If you…\n 2 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… [Remov…\n 3 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… [Remov…\n 4 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… [Remov…\n 5 &lt;NA&gt;      Yaho… Prana… Musk… \"Elon Musk… http… &lt;NA&gt;       2024-06-11… If you…\n 6 &lt;NA&gt;      Yaho… Danie… The … \"A number … http… &lt;NA&gt;       2024-06-13… If you…\n 7 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… [Remov…\n 8 &lt;NA&gt;      Yaho… Karis… X is… \"X will so… http… &lt;NA&gt;       2024-06-21… If you…\n 9 &lt;NA&gt;      Yaho… Marie… X is… \"Thanks to… http… &lt;NA&gt;       2024-06-12… If you…\n10 &lt;NA&gt;      Yaho… Steve… Bill… \"Yusaku Ma… http… &lt;NA&gt;       2024-06-03… If you…\n# ℹ 90 more rows\n\n\nNext we develop a function to complete these queries automatically, allowing the user to specific a topic of interest, a publishing date when the search should begin, and adding their own API key. We then complete two test queries, one checking for articles on the Olympics since June 1st, and one checking for articles on Dogs since June 15th.\n\nqueryNewsapi &lt;- function(topic,date,key){\n  URL &lt;- paste(\"https://newsapi.org/v2/everything?q=\",topic,\"&from=\",date,\"&apiKey=\",key,sep='')\n  news &lt;- GET(URL)\n  parsed &lt;- fromJSON(rawToChar(news$content))\n  articleInfo &lt;- as_tibble(parsed$articles)\n  articleInfo\n}\n\nqueryNewsapi(\"Olympics\",\"2024-06-01\",\"6817506ff35546e58c629710b46cafd1\")\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Andr… techk… Sams… \"Samsung h… http… https://c… 2024-06-21… \"What …\n 2 the-verge The … Anton… You … \"NBCUniver… http… https://c… 2024-06-03… \"You c…\n 3 &lt;NA&gt;      BBC … BBC S… Murr… \"Britain's… http… https://i… 2024-06-21… \"Andy …\n 4 &lt;NA&gt;      NPR   Rache… Pari… \"The U.S. … http… https://n… 2024-06-24… \"A mon…\n 5 &lt;NA&gt;      NPR   Brian… Gabr… \"At age 46… http… https://n… 2024-06-24… \"When …\n 6 &lt;NA&gt;      NPR   Carri… Meet… \"Brazil ha… http… https://m… 2024-06-24… \"Brazi…\n 7 &lt;NA&gt;      BBC … &lt;NA&gt;   Olym… \"Matt Rich… http… https://i… 2024-06-15… \"By Ai…\n 8 espn      ESPN  Micha… Wing… \"Wings sta… http… https://a… 2024-06-16… \"Dalla…\n 9 business… Busi… Myken… Phot… \"Ralph Lau… http… https://i… 2024-06-21… \"Team …\n10 business… Busi… Myken… 12 i… \"Ilona Mah… http… https://i… 2024-06-20… \"Olymp…\n# ℹ 90 more rows\n\nqueryNewsapi(\"Dogs\",\"2024-06-15\",\"6817506ff35546e58c629710b46cafd1\")\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      BBC … &lt;NA&gt;   Peop… \"A fire br… http… https://i… 2024-06-22… \"By He…\n 2 &lt;NA&gt;      BBC … &lt;NA&gt;   Man … \"Neighbour… http… https://i… 2024-06-17… \"A man…\n 3 abc-news  ABC … JEFF … 38 d… \"A trio of… http… https://i… 2024-06-21… \"ATLAN…\n 4 &lt;NA&gt;      The … Alexa… Woul… \"Since 200… http… https://m… 2024-06-24… \"A few…\n 5 &lt;NA&gt;      Unda… Undar… Is h… \"It turns … http… https://c… 2024-06-24… \"70\\r\\…\n 6 time      Time  Jessi… The … \"Pets are … http… https://a… 2024-06-23… \"By da…\n 7 &lt;NA&gt;      HYPE… info@… NEIG… \"Continuin… http… https://i… 2024-06-15… \"Conti…\n 8 &lt;NA&gt;      Advn… Cat E… Yell… \"There's a… http… https://s… 2024-06-24… \"A car…\n 9 &lt;NA&gt;      Yaho… Sean … Chie… \"Buggs has… http… https://s… 2024-06-24… \"Isaia…\n10 &lt;NA&gt;      Thek… Kiers… This… \"It’s bril… http… https://c… 2024-06-22… \"We in…\n# ℹ 90 more rows"
  }
]